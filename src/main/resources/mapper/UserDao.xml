<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.boot.ymw.cn.dao.UserDao">

    <resultMap type="cn.boot.ymw.cn.pojo.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="loginname" column="loginName" jdbcType="VARCHAR"/>
        <result property="username" column="userName" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="identitycode" column="identityCode" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="mobile" column="mobile" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, loginName, userName, password, sex, identityCode, email, mobile, type
        from user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, loginName, userName, password, sex, identityCode, email, mobile, type
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginname != null and loginname != ''">
                and loginName = #{loginname}
            </if>
            <if test="username != null and username != ''">
                and userName = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="identitycode != null and identitycode != ''">
                and identityCode = #{identitycode}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginname != null and loginname != ''">
                and loginName = #{loginname}
            </if>
            <if test="username != null and username != ''">
                and userName = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="identitycode != null and identitycode != ''">
                and identityCode = #{identitycode}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="mobile != null and mobile != ''">
                and mobile = #{mobile}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(loginName, userName, password, sex, identityCode, email, mobile, type)
        values (#{loginname}, #{username}, #{password}, #{sex}, #{identitycode}, #{email}, #{mobile}, #{type})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(loginName, userName, password, sex, identityCode, email, mobile, type)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.loginname}, #{entity.username}, #{entity.password}, #{entity.sex}, #{entity.identitycode}, #{entity.email}, #{entity.mobile}, #{entity.type})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into user(loginName, userName, password, sex, identityCode, email, mobile, type)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.loginname}, #{entity.username}, #{entity.password}, #{entity.sex}, #{entity.identitycode}, #{entity.email}, #{entity.mobile}, #{entity.type})
        </foreach>
        on duplicate key update
        loginName = values(loginName),
        userName = values(userName),
        password = values(password),
        sex = values(sex),
        identityCode = values(identityCode),
        email = values(email),
        mobile = values(mobile),
        type = values(type)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update user
        <set>
            <if test="loginname != null and loginname != ''">
                loginName = #{loginname},
            </if>
            <if test="username != null and username != ''">
                userName = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="identitycode != null and identitycode != ''">
                identityCode = #{identitycode},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="mobile != null and mobile != ''">
                mobile = #{mobile},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from user where id = #{id}
    </delete>

</mapper>

